---

# - name: Install NVMesh core and utils
#   package:
#     name:
#       - nvmesh-core
#       - nvmesh-utils
#       - nvme-cli
#       # - nvmesh-nvmft

# - set_fact:
#     management_server_with_port: "{{ management_server_with_port}} + [ '{{ item }}'+':4001' ]"
#   loop: "{{ groups.excelero_mgrs }}"

# - debug: var=management_server_with_port

# - name: Initialize MANAGEMENT_SERVERS in /etc/nvmesh/nvmesh.conf
#   lineinfile:
#     path: "/etc/nvmesh/nvmesh.conf"
#     regexp: "^MANAGEMENT_SERVERS="
#     line: MANAGEMENT_SERVERS='{{ ",".join(management_server_with_port) }}'

# # TODO: a revoir : template jinja
# - name: Initialize CONFIGURED_NICS in /etc/nvmesh/nvmesh.conf
#   lineinfile:
#     path: "/etc/nvmesh/nvmesh.conf"
#     regexp: '^CONFIGURED_NICS='
#     line: CONFIGURED_NICS="{{ configured_nics }}"

# # TODO: a revoir : template jinja
# - name: Disable RDDA transport
#   lineinfile:
#     path: "/etc/nvmesh/nvmesh.conf"
#     line: 'MLX5_RDDA_ENABLED="False"'

# - name: Kernel tuning recommendations
#   template:
#     src: etc/modprobe.d/nvmesh_options.conf.j2
#     dest: /etc/modprobe.d/nvmesh_options.conf
#     owner: root
#     group: root
#     mode: '0644'

- name: Check if there are connected NVMe drives
  shell:
    "lspci  | grep -i nvm"
  register: has_nvme_drive
  ignore_errors: true

# - debug: var=has_nvme_drive

# ## for debug .. can be removed
# - name: Disable target only on node that hasn't NVMe drives
#   systemd:
#     name: nvmeshtarget
#     state: stopped
#     enabled: no

- name: Initialize NVMe drives (if required)
  include: initialize-nvme-drive.yml
  when: has_nvme_drive.rc == 0

- name: Create default volumes
  include_tasks: create-default-volume.yml
  vars:
    volume_name: "{{ nvme_volume.name }}"
    volume_size: "{{ nvme_volume.size }}"
    volume_raid_level: "{{ nvme_volume.raid_level }}"
    volume_stripe_width: "{{ nvme_volume.stripe_width }}"
    volume_mount_point: "{{ nvme_volume.mount_point }}"
  loop: "{{ volumes_to_create }}"
  loop_control:
    loop_var: nvme_volume
  run_once: true

- name: Create and mount partitions
  import_tasks: create-and-mount-partition.yml

# - name: test
#   shell:
#     "/usr/bin/nvmesh volume show --name {{ item.name }}"
#   loop: "{{ volumes_to_create }}"
#   register: user_volume
#   run_once: true

# - debug: var=user_volume
#   run_once: true

# - name: Create default directory
#   include: create-default-volumes.yml


# - name: Enable target only on node that has NVMe drives
#   systemd:
#     name: nvmeshtarget
#     state: restarted
#     enabled: yes
#   when: has_nvme_drive.rc == 0

# - name: Enable and start NVMesh client
#   systemd:
#     name: nvmeshclient
#     state: restarted
#     enabled: yes

# - debug:
#     msg: "Verify the nodes and check in to management to see 10 clients and 10 targets with 100 NVMe drives on the Dashboard page of WebUI."
#   run_once: true