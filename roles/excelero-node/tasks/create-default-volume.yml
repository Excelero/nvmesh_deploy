---

- name: "Check if a volume with the same name ({{ volume_name }}) already exists"
  shell:
    "/usr/bin/nvmesh volume show --name {{ volume_name }}"
  register: check_volume
  # run_once: true

- debug: var=check_volume.stdout

- debug: var=check_volume.stdout|length
  when: check_volume.stdout == "[]"

- name: Create NVMesh volumes (user defined)
  shell:
    "/usr/bin/nvmesh volume create -n {{ volume_name }} -rl {{ volume_raid_level }} --stripe-width {{ volume_stripe_width }} -c {{ volume_size }}"
  loop: "{{ volumes_to_create }}"
  when: check_volume.stdout == "[]"
  run_once: true

- name: Attach volumes to hosts
  shell:
    "/usr/bin/nvmesh_attach_volumes {{ volume_name }}"
  # run_once: true

# - name: Create a XFS primary partition
#   community.general.parted:
#     device: "/dev/nvmesh/{{ item.name }}"
#     number: 1
#     label: "gpt"
#     part_start: "256s"
#     part_end: "100%"
#     state: present


# - name: Format partition with XFS
#   community.general.filesystem:
#     fstype: xfs
#     dev: "/dev/nvmesh/{{ item }}"
#     opts: "-K -d su=4k,sw=8 -l version=2,su=4k -isize=512"
#   loop: "{{ volumes_to_create }}"

# # TODO: cpu pining for process
# # https://community.mellanox.com/s/article/howto-configure-and-test-beegfs-with-rdma
# # https://community.mellanox.com/s/article/understanding-numa-node-for-performance-benchmarks


# # TODO: make the list a variable
# - name: Create /beegfs directory and subdirectories
#   file:
#     path: "{{ item.mount_point }}"
#     state: directory
#   loop: "{{ volumes_to_create }}"

# - name: Add mount point to /etc/fstab
#   lineinfile:
#     path: /etc/fstab
#     regexp: "^/dev/nvmesh/{{ item.name }}"
#     line: "/dev/nvmesh/{{ item.name }} {{ item.mount_point }} xfs rw,noatime,nodiratime,largeio,inode64,noauto 0 0"
#   loop: "{{ volumes_to_create }}"

# - name: Mount default volumes
#   ansible.posix.mount:
#     path: "{{ item.mount_point }}"
#     fstype: xfs
#     state: present
#   loop: "{{ volumes_to_create }}"